########## smooth commands makefile ##########

include $(SMOOTH_PATH)/Makefile-options

CC	   = gcc
CCOPTS	   = -g0 -Wall -Os -ffast-math -I$(SMOOTH_PATH)/include -DUNICODE -D_UNICODE $(MYCCOPTS)
#CCOPTS	   = -g0 -Wall -Os -ffast-math -I$(SMOOTH_PATH)/include -include $(SMOOTH_PATH)/include/smooth.h -DUNICODE -D_UNICODE $(MYCCOPTS)
RC	   = windres
RCOPTS	   = -DSMOOTH_DLL -O coff
LD	   = gcc
LDOPTS	   = -L$(SMOOTH_PATH)/$(LIBDIR) -lstdc++ $(LIBS)
STRIP	   = strip
STRIP_OPTS = --strip-all

ifndef GLOBALDLL
	LDOPTS += -lsmooth
endif

ifeq ($(BUILD_WIN32),True)
	LDOPTS += -mwindows -Wl,--dynamicbase,--nxcompat

	ifdef IMPORTLIB
		ifdef GLOBALDLL
			LDOPTS += -Wl,--out-implib,$(SMOOTH_PATH)/$(LIBDIR)/$(IMPORTLIB)
		else
			LDOPTS += -Wl,--out-implib,$(IMPORTLIB)
		endif
	endif

	CCOPTS += -I$(SMOOTH_PATH)/include/support
else
	LDOPTS += -Wl,-rpath,.

	ifeq ($(BUILD_OSX),True)
		ifdef GLOBALDLL
			LDOPTS += -Wl,-dylib_install_name,lib$(GLOBALDLL)$(SHARED)
		endif
	endif

ifneq ($(BUILD_SOLARIS),True)
	CCOPTS += -pthread
endif
endif

ifeq ($(BUILD_SOLARIS),True)
	CCOPTS += -fpic
endif

ifeq ($(BUILD_QNX),True)
	CCOPTS += -I$(SMOOTH_PATH)/include/support
endif

ifneq ($(EXCEPTION),True)
	CCOPTS += -fno-exceptions
endif

ifeq ($(BUILD_X64),True)
	CCOPTS += -m64 -march=nocona
	LDOPTS += -m64
else
	CCOPTS += -m32 -march=pentium4
	LDOPTS += -m32
endif

ifndef GLOBALLIB
ifndef GLOBALEXE
ifndef GLOBALDLL
ifndef LOCALEXE
ifndef LOCALDLL
	CCOPTS += -DSMOOTH_DLL

ifeq ($(BUILD_WIN32),True)
	CCOPTS += -DLIBICONV_PLUG -DLIBXML_STATIC
endif
endif
endif
endif
endif
endif

CPPC	 = g++
CPPCOPTS = $(CCOPTS)

.SUFFIXES: .mm .rc

TARGETS =

ifdef GLOBALLIB
	TARGETS += $(SMOOTH_PATH)/$(LIBDIR)/$(GLOBALLIB)
endif

ifdef GLOBALEXE
	TARGETS += $(SMOOTH_PATH)/$(BINDIR)/$(GLOBALEXE)$(EXECUTABLE)
endif

ifdef GLOBALDLL
ifneq ($(BUILD_WIN32),True)
	TARGETS += $(SMOOTH_PATH)/$(LIBDIR)/lib$(GLOBALDLL)$(SHARED)
else
	TARGETS += $(SMOOTH_PATH)/$(BINDIR)/$(GLOBALDLL)$(SHARED)
	TARGETS += $(SMOOTH_PATH)/$(LIBDIR)/$(IMPORTLIB)
endif
endif

ifdef LOCALEXE
	TARGETS += $(LOCALEXE)$(EXECUTABLE)
endif

ifdef LOCALDLL
	TARGETS += $(LOCALDLL)$(SHARED)

ifeq ($(BUILD_WIN32),True)
	TARGETS += $(IMPORTLIB)
endif
endif

all: $(OBJECTS) $(TARGETS)
	$(ALLCMD1)
	$(ALLCMD2)
	$(ALLCMD3)
	$(ALLCMD4)
	$(ALLCMD5)

clean:
	rm -f $(OBJECTS) $(TARGETS)
	$(CLEANCMD1)
	$(CLEANCMD2)
	$(CLEANCMD3)
	$(CLEANCMD4)
	$(CLEANCMD5)

.c.o:
	$(CC) $(CCOPTS) -c $< -o $@

.cc.o:
	$(CPPC) $(CPPCOPTS) -c $< -o $@

.cpp.o:
	$(CPPC) $(CPPCOPTS) -c $< -o $@

.mm.o:
	$(CPPC) $(CPPCOPTS) -c $< -o $@

.rc.o:
	$(RC) $(RCOPTS) $< -o $@

ifdef GLOBALLIB
$(SMOOTH_PATH)/$(LIBDIR)/$(GLOBALLIB): $(OBJECTS)
	$(AR) r $@ $(OBJECTS)
endif

ifdef GLOBALEXE
$(SMOOTH_PATH)/$(BINDIR)/$(GLOBALEXE)$(EXECUTABLE): $(OBJECTS)
	$(LD) -o $@ $(OBJECTS) $(LDOPTS)
ifneq ($(BUILD_OSX),True)
	$(STRIP) $(STRIP_OPTS) $@
endif
endif

ifdef GLOBALDLL
ifneq ($(BUILD_WIN32),True)
$(SMOOTH_PATH)/$(LIBDIR)/lib$(GLOBALDLL)$(SHARED): $(OBJECTS)
else
$(SMOOTH_PATH)/$(BINDIR)/$(GLOBALDLL)$(SHARED): $(OBJECTS)
endif
	$(LD) --shared -o $@ $(OBJECTS) $(LDOPTS)
ifneq ($(BUILD_OSX),True)
	$(STRIP) $(STRIP_OPTS) $@
endif

ifeq ($(BUILD_WIN32),True)
$(SMOOTH_PATH)/$(LIBDIR)/$(IMPORTLIB): $(SMOOTH_PATH)/$(BINDIR)/$(GLOBALDLL)$(SHARED)
endif
endif

ifdef LOCALEXE
$(LOCALEXE)$(EXECUTABLE): $(OBJECTS)
	$(LD) -o $@ $(OBJECTS) $(LDOPTS)
ifneq ($(BUILD_OSX),True)
	$(STRIP) $(STRIP_OPTS) $@
endif
endif

ifdef LOCALDLL
$(LOCALDLL)$(SHARED): $(OBJECTS)
	$(LD) --shared -o $@ $(OBJECTS) $(LDOPTS)
ifneq ($(BUILD_OSX),True)
	$(STRIP) $(STRIP_OPTS) $@
endif

ifeq ($(BUILD_WIN32),True)
$(IMPORTLIB): $(LOCALDLL)$(SHARED)
endif
endif
