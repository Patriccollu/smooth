########## smooth commands makefile ##########

include $(SMOOTH_PATH)/Makefile-options

CC	   = gcc
CCOPTS	   = -pipe -g0 -Wall -I$(SMOOTH_PATH)/include -DUNICODE -D_UNICODE $(MYCCOPTS)
RC	   = windres
RCOPTS	   = -DSMOOTH_DLL -O coff
LD	   = gcc
LDOPTS	   = -pipe -L$(SMOOTH_PATH)/$(LIBDIR) -lstdc++ $(LIBS)

ifneq ($(BUILD_SOLARIS),True)
	CCOPTS += -Os
endif

ifndef GLOBALDLL
ifeq ($(BUILD_WIN32),True)
	LDOPTS += -lsmooth
else
	LDOPTS += -lsmooth-$(VERSION)
endif
endif

ifeq ($(BUILD_WIN32),True)
	LDOPTS += -mwindows -Wl,--dynamicbase,--nxcompat

	ifdef IMPORTLIB
		ifdef GLOBALDLL
			LDOPTS += -Wl,--out-implib,$(SMOOTH_PATH)/$(LIBDIR)/$(IMPORTLIB)
		else
			LDOPTS += -Wl,--out-implib,$(IMPORTLIB)
		endif
	endif

	CCOPTS += -I$(SMOOTH_PATH)/include/support
else
	LDOPTS += -Wl,-rpath,.

	ifdef GLOBALDLL
		ifeq ($(BUILD_OSX),True)
			LDOPTS += -Wl,-dylib_install_name,lib$(GLOBALDLL)-$(VERSION).$(REVISION)$(SHARED)
		else
			LDOPTS += -Wl,-soname,lib$(GLOBALDLL)-$(VERSION)$(SHARED).$(REVISION)
		endif
	endif

ifeq ($(BUILD_OPENBSD),True)
	LDOPTS += -L/usr/X11R6/lib -L/usr/local/lib
endif

ifneq ($(BUILD_SOLARIS),True)
ifneq ($(BUILD_HAIKU),True)
ifneq ($(BUILD_QNX),True)
	CCOPTS += -pthread
endif
endif
endif
endif

ifeq ($(BUILD_SOLARIS),True)
	CCOPTS += -fPIC
endif

ifeq ($(BUILD_LINUX),True)
ifeq ($(BUILD_X86_64),True)
	CCOPTS += -fPIC
endif
endif

ifeq ($(BUILD_QNX),True)
	CCOPTS += -I$(SMOOTH_PATH)/include/support
endif

ifneq ($(EXCEPTION),True)
	CCOPTS += -fno-exceptions
endif

ifeq ($(BUILD_OSX),True)
ifeq ($(BUILD_X86),True)
	CCOPTS += -arch i386
	LDOPTS += -arch i386
endif
ifeq ($(BUILD_X86_64),True)
	CCOPTS += -arch x86_64
	LDOPTS += -arch x86_64
endif
ifeq ($(BUILD_PPC),True)
	CCOPTS += -arch ppc
	LDOPTS += -arch ppc
endif
ifeq ($(BUILD_PPC64),True)
	CCOPTS += -arch ppc64
	LDOPTS += -arch ppc64
endif

	CCOPTS += -mmacosx-version-min=10.5
else
	LDOPTS += -s

ifeq ($(BUILD_X86),True)
	CCOPTS += -m32
	LDOPTS += -m32

	RCOPTS += --target=pe-i386
else ifeq ($(BUILD_X86_64),True)
	CCOPTS += -m64
	LDOPTS += -m64

	RCOPTS += --target=pe-x86-64
endif
endif

ifndef GLOBALLIB
ifndef GLOBALEXE
ifndef GLOBALDLL
ifndef LOCALEXE
ifndef LOCALDLL
	CCOPTS += -DSMOOTH_DLL

ifeq ($(BUILD_WIN32),True)
	CCOPTS += -DLIBICONV_PLUG -DLIBXML_STATIC
else ifeq ($(BUILD_QNX),True)
	CCOPTS += -DLIBICONV_PLUG
endif
endif
endif
endif
endif
endif

CPPC	 = g++
CPPCOPTS = $(CCOPTS)

.SUFFIXES: .mm .rc

TARGETS =

ifdef GLOBALLIB
	TARGETS += $(SMOOTH_PATH)/$(LIBDIR)/$(GLOBALLIB)
endif

ifdef GLOBALEXE
	TARGETS += $(SMOOTH_PATH)/$(BINDIR)/$(GLOBALEXE)$(EXECUTABLE)
endif

ifdef GLOBALDLL
ifeq ($(BUILD_WIN32),True)
	TARGETS += $(SMOOTH_PATH)/$(BINDIR)/$(GLOBALDLL)$(SHARED)
	TARGETS += $(SMOOTH_PATH)/$(LIBDIR)/$(IMPORTLIB)
else
	TARGETS += $(SMOOTH_PATH)/$(LIBDIR)/lib$(GLOBALDLL)-$(VERSION)$(SHARED)
endif
endif

ifdef LOCALEXE
	TARGETS += $(LOCALEXE)$(EXECUTABLE)
endif

ifdef LOCALDLL
	TARGETS += $(LOCALDLL)$(SHARED)

ifeq ($(BUILD_WIN32),True)
	TARGETS += $(IMPORTLIB)
endif
endif

all: $(OBJECTS) $(TARGETS)
	$(ALLCMD1)
	$(ALLCMD2)
	$(ALLCMD3)
	$(ALLCMD4)

clean:
ifdef OBJECTS
	rm -f $(OBJECTS)
endif
ifdef TARGETS
	rm -f $(TARGETS)
endif
	$(CLEANCMD1)
	$(CLEANCMD2)
	$(CLEANCMD3)
	$(CLEANCMD4)

.c.o:
	$(CC) $(CCOPTS) -c $< -o $@

.cc.o:
	$(CPPC) $(CPPCOPTS) -c $< -o $@

.cpp.o:
	$(CPPC) $(CPPCOPTS) -c $< -o $@

.mm.o:
	$(CPPC) $(CPPCOPTS) -c $< -o $@

.rc.o:
	$(RC) $(RCOPTS) $< -o $@

ifdef GLOBALLIB
$(SMOOTH_PATH)/$(LIBDIR)/$(GLOBALLIB): $(OBJECTS)
	mkdir -p $(SMOOTH_PATH)/$(LIBDIR)
	$(AR) rs $@ $(OBJECTS)
endif

ifdef GLOBALEXE
$(SMOOTH_PATH)/$(BINDIR)/$(GLOBALEXE)$(EXECUTABLE): $(OBJECTS)
	mkdir -p $(SMOOTH_PATH)/$(BINDIR)
	$(LD) -o $@ $(OBJECTS) $(LDOPTS)
endif

ifdef GLOBALDLL
ifeq ($(BUILD_WIN32),True)
$(SMOOTH_PATH)/$(BINDIR)/$(GLOBALDLL)$(SHARED): $(OBJECTS)
	mkdir -p $(SMOOTH_PATH)/$(BINDIR)
else
$(SMOOTH_PATH)/$(LIBDIR)/lib$(GLOBALDLL)-$(VERSION)$(SHARED): $(OBJECTS)
endif
	mkdir -p $(SMOOTH_PATH)/$(LIBDIR)
ifneq ($(BUILD_OSX),True)
	$(LD) --shared -o $@ $(OBJECTS) $(LDOPTS)
else
	$(LD) -dynamiclib -o $@ $(OBJECTS) $(LDOPTS)
endif

ifeq ($(BUILD_WIN32),True)
$(SMOOTH_PATH)/$(LIBDIR)/$(IMPORTLIB): $(SMOOTH_PATH)/$(BINDIR)/$(GLOBALDLL)$(SHARED)
endif
endif

ifdef LOCALEXE
$(LOCALEXE)$(EXECUTABLE): $(OBJECTS)
	$(LD) -o $@ $(OBJECTS) $(LDOPTS)
endif

ifdef LOCALDLL
$(LOCALDLL)$(SHARED): $(OBJECTS)
ifneq ($(BUILD_OSX),True)
	$(LD) --shared -o $@ $(OBJECTS) $(LDOPTS)
else
	$(LD) -dynamiclib -o $@ $(OBJECTS) $(LDOPTS)
endif

ifeq ($(BUILD_WIN32),True)
$(IMPORTLIB): $(LOCALDLL)$(SHARED)
endif
endif
