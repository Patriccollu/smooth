# Makefile for smooth v0.8, Windows, MinGW32

include Makefile-common

HEADERS = $(OBJECTDIR)/smooth.h.gch

OBJECTS = $(OBJECTDIR)/backendwin32.o $(OBJECTDIR)/backend.o $(OBJECTDIR)/input.o $(OBJECTDIR)/object.o $(OBJECTDIR)/objecttype.o $(OBJECTDIR)/setup.o $(OBJECTDIR)/error_endoffile.o $(OBJECTDIR)/error_filenotfound.o $(OBJECTDIR)/error_permissiondenied.o $(OBJECTDIR)/error.o $(OBJECTDIR)/success.o $(OBJECTDIR)/directory.o $(OBJECTDIR)/file.o $(OBJECTDIR)/bitmapgdi.o $(OBJECTDIR)/fontgdi.o $(OBJECTDIR)/surfacegdi.o $(OBJECTDIR)/bitmapbackend.o $(OBJECTDIR)/fontbackend.o $(OBJECTDIR)/surfacebackend.o $(OBJECTDIR)/form.o $(OBJECTDIR)/line.o $(OBJECTDIR)/point.o $(OBJECTDIR)/rect.o $(OBJECTDIR)/size.o $(OBJECTDIR)/imageloader.o $(OBJECTDIR)/imageloader_icon.o $(OBJECTDIR)/imageloader_jpeg.o $(OBJECTDIR)/imageloader_pci.o $(OBJECTDIR)/imageloader_png.o $(OBJECTDIR)/modifier_fontsize.o $(OBJECTDIR)/modifier_righttoleft.o $(OBJECTDIR)/bitmap.o $(OBJECTDIR)/color.o $(OBJECTDIR)/font.o $(OBJECTDIR)/surface.o $(OBJECTDIR)/application.o $(OBJECTDIR)/xulloader.o $(OBJECTDIR)/colordlg.o $(OBJECTDIR)/dialog.o $(OBJECTDIR)/dirdlg.o $(OBJECTDIR)/filedlg.o $(OBJECTDIR)/fontdlg.o $(OBJECTDIR)/messagebox.o $(OBJECTDIR)/splashscreen.o $(OBJECTDIR)/tipodaydlg.o $(OBJECTDIR)/mdiclient.o $(OBJECTDIR)/mdiwindow.o $(OBJECTDIR)/activearea.o $(OBJECTDIR)/arrows.o $(OBJECTDIR)/button.o $(OBJECTDIR)/checkbox.o $(OBJECTDIR)/client.o $(OBJECTDIR)/divider.o $(OBJECTDIR)/editbox.o $(OBJECTDIR)/groupbox.o $(OBJECTDIR)/hyperlink.o $(OBJECTDIR)/image.o $(OBJECTDIR)/multiedit.o $(OBJECTDIR)/optionbox.o $(OBJECTDIR)/progressbar.o $(OBJECTDIR)/scrollbar.o $(OBJECTDIR)/slider.o $(OBJECTDIR)/statusbar.o $(OBJECTDIR)/tabwidget.o $(OBJECTDIR)/text.o $(OBJECTDIR)/titlebar.o $(OBJECTDIR)/hotspot.o $(OBJECTDIR)/simplebutton.o $(OBJECTDIR)/imagebox.o $(OBJECTDIR)/imageentry.o $(OBJECTDIR)/combobox.o $(OBJECTDIR)/list.o $(OBJECTDIR)/listbox.o $(OBJECTDIR)/listboxheader.o $(OBJECTDIR)/listentry.o $(OBJECTDIR)/menu.o $(OBJECTDIR)/menubar.o $(OBJECTDIR)/menubarentry.o $(OBJECTDIR)/menuentry.o $(OBJECTDIR)/micromenu.o $(OBJECTDIR)/popupmenu.o $(OBJECTDIR)/popupmenuentry.o $(OBJECTDIR)/popupmenuentrycheck.o $(OBJECTDIR)/popupmenuentryoption.o $(OBJECTDIR)/tree.o $(OBJECTDIR)/cursor.o $(OBJECTDIR)/dragcontrol.o $(OBJECTDIR)/droparea.o $(OBJECTDIR)/shortcut.o $(OBJECTDIR)/tooltip.o $(OBJECTDIR)/layer.o $(OBJECTDIR)/widget.o $(OBJECTDIR)/windowgdi.o $(OBJECTDIR)/windowbackend.o $(OBJECTDIR)/toolwindow.o $(OBJECTDIR)/window.o $(OBJECTDIR)/i18n_language.o $(OBJECTDIR)/i18n_number.o $(OBJECTDIR)/i18n_translator.o $(OBJECTDIR)/driver_ansi.o $(OBJECTDIR)/driver_https.o $(OBJECTDIR)/driver_memory.o $(OBJECTDIR)/driver_posix.o $(OBJECTDIR)/driver_socket.o $(OBJECTDIR)/driver_socks4.o $(OBJECTDIR)/driver_socks5.o $(OBJECTDIR)/driver_win32.o $(OBJECTDIR)/driver_zero.o $(OBJECTDIR)/filter_bzip2.o $(OBJECTDIR)/filter_xor.o $(OBJECTDIR)/driver.o $(OBJECTDIR)/filter.o $(OBJECTDIR)/instream.o $(OBJECTDIR)/outstream.o $(OBJECTDIR)/stream.o $(OBJECTDIR)/base64.o $(OBJECTDIR)/hash_crc32.o $(OBJECTDIR)/hash_md5.o $(OBJECTDIR)/args.o $(OBJECTDIR)/binary.o $(OBJECTDIR)/config.o $(OBJECTDIR)/datetime.o $(OBJECTDIR)/math.o $(OBJECTDIR)/memory.o $(OBJECTDIR)/number.o $(OBJECTDIR)/string.o $(OBJECTDIR)/string_case.o $(OBJECTDIR)/protocol_file.o $(OBJECTDIR)/protocol_http.o $(OBJECTDIR)/protocol.o $(OBJECTDIR)/eventwin32.o $(OBJECTDIR)/timerwin32.o $(OBJECTDIR)/eventbackend.o $(OBJECTDIR)/timerbackend.o $(OBJECTDIR)/console.o $(OBJECTDIR)/dynamicloader.o $(OBJECTDIR)/event.o $(OBJECTDIR)/multimonitor.o $(OBJECTDIR)/system.o $(OBJECTDIR)/timer.o $(OBJECTDIR)/mutexwin32.o $(OBJECTDIR)/semaphorewin32.o $(OBJECTDIR)/threadwin32.o $(OBJECTDIR)/mutexbackend.o $(OBJECTDIR)/semaphorebackend.o $(OBJECTDIR)/threadbackend.o $(OBJECTDIR)/mutex.o $(OBJECTDIR)/rwlock.o $(OBJECTDIR)/semaphore.o $(OBJECTDIR)/thread.o $(OBJECTDIR)/xul_box.o $(OBJECTDIR)/xul_button.o $(OBJECTDIR)/xul_description.o $(OBJECTDIR)/xul_label.o $(OBJECTDIR)/xul_menubar.o $(OBJECTDIR)/xul_popupmenu.o $(OBJECTDIR)/xul_renderer.o $(OBJECTDIR)/xul_textbox.o $(OBJECTDIR)/xul_widget.o $(OBJECTDIR)/xul_window.o $(OBJECTDIR)/xml_attribute.o $(OBJECTDIR)/xml_document.o $(OBJECTDIR)/xml_node.o $(OBJECTDIR)/codecs.o $(OBJECTDIR)/init.o $(OBJECTDIR)/pciio.o $(OBJECTDIR)/templates.o
RESOURCES = $(OBJECTDIR)/resources.o

LIBS = -lunicows -lfribidi2 -lbz2 -llisa -lxml -ljpeg -lpng -lz -lws2_32 -limm32 -lole32 -lstdc++

SAMPLESLIBS = -lsmooth -lstdc++

DLLNAME = $(BINDIR)/smooth.dll
LIBNAME = $(LIBDIR)/libsmooth.a

LIBICONV = $(LIBDIR)/libiconv.a
LIBICONVDLL = $(BINDIR)/iconv.dll
LIBLISA = $(LIBDIR)/liblisa.a

OTHERLIBS = libs $(LIBICONVDLL) $(LIBLISA)

LISAOBJECTS = $(OBJECTDIR)/lisa_lisa.o

DESIGNEROBJECTS = $(OBJECTDIR)/designer_designer.o $(OBJECTDIR)/designer_edit_component.o
TRANSLATOROBJECTS = $(OBJECTDIR)/translator_translator.o $(OBJECTDIR)/translator_resources.o
PCIFFMANOBJECTS = $(OBJECTDIR)/pciffman_main.o
SAMPLE1OBJECTS = $(SAMPLE1DIR)/beat.o
SAMPLE2OBJECTS = $(SAMPLE2DIR)/test.o
SAMPLE3OBJECTS = $(SAMPLE3DIR)/testkey.o
SAMPLE4OBJECTS = $(SAMPLE4DIR)/widgettest.o
SAMPLE5OBJECTS = $(SAMPLE5DIR)/mditest.o
SAMPLE4DLLOBJECTS = $(SAMPLE4DIR)/myactivearea.o

DESIGNEREXE = $(BINDIR)/designer.exe
TRANSLATOREXE = $(BINDIR)/translator.exe
PCIFFMANEXE = $(BINDIR)/pciffman.exe
SAMPLE1EXE = $(SAMPLE1DIR)/beat.exe
SAMPLE2EXE = $(SAMPLE2DIR)/test.exe
SAMPLE3EXE = $(SAMPLE3DIR)/testkey.exe
SAMPLE4EXE = $(SAMPLE4DIR)/widgettest.exe
SAMPLE5EXE = $(SAMPLE5DIR)/mditest.exe
SAMPLE4DLL = $(SAMPLE4DIR)/myactivearea.dll
SAMPLE4LIB = $(SAMPLE4DIR)/libmyactivearea.a

COMPILER = g++
C_COMPILER = gcc
LINKER = gcc
RESCOMP = windres
STRIP = strip
REMOVER = rm
COPIER = cp
ECHO = echo
AR = ar
PACKER = upx
COMPILER_OPTS = -I$(INCLUDEDIR) -include $(OBJECTDIR)/smooth.h -march=i586 -Os -g0 -Wall -fno-exceptions -DUNICODE -D_UNICODE -D__SMOOTH_DLL__ -DLIBICONV_PLUG -DLIBXML_STATIC -c
#COMPILER_OPTS = -I$(INCLUDEDIR) -include $(OBJECTDIR)/smooth.h -march=i586 -Os -g0 -Wall -fno-exceptions -fno-implicit-templates -D__EXPLICIT_TEMPLATES__ -DUNICODE -D_UNICODE -D__SMOOTH_DLL__ -DLIBICONV_PLUG -DLIBXML_STATIC -c
C_COMPILER_OPTS = -I$(INCLUDEDIR) -march=i586 -Os -g0 -Wall -fno-exceptions -DUNICODE -D_UNICODE -DLIBICONV_PLUG -DLIBXML_STATIC -c
LINKER_OPTS = -L$(LIBDIR) -mwindows --shared -Xlinker --kill-at -Xlinker --out-implib -Xlinker $(LIBNAME) -o $(DLLNAME)
PLUGIN_LINKER_OPTS = -L$(LIBDIR) -mwindows --shared -Xlinker --kill-at -Xlinker --out-implib -Xlinker $(SAMPLE4LIB) -o $(SAMPLE4DLL)
EXECOMPILER_OPTS = -I$(INCLUDEDIR) -march=i586 -Os -g0 -Wall -fno-exceptions -DUNICODE -D_UNICODE -c
EXELINKER_OPTS = -L$(LIBDIR) $(SAMPLESLIBS) -mwindows
RESCOMP_OPTS = -D__SMOOTH_DLL__ -O coff
STRIP_OPTS = --strip-all
LIBSTRIP_OPTS = --strip-debug
REMOVER_OPTS = -f
COPIER_OPTS = -f
PACKER_OPTS = --best -q

.PHONY: all headers programs install clean clean_all clean_headers distribute doc doc-clean
.SILENT:

all: $(HEADERS) $(OBJECTS) $(RESOURCES) $(OTHERLIBS) $(DLLNAME) distribute

headers: clean_headers $(HEADERS)

programs: $(HEADERS) $(DLLNAME) $(DESIGNEREXE) $(PCIFFMANEXE) $(TRANSLATOREXE) $(SAMPLE1EXE) $(SAMPLE2EXE) $(SAMPLE3EXE) $(SAMPLE4DLL) $(SAMPLE4EXE) $(SAMPLE5EXE) distribute

libs:
	$(MAKE) -C libraries

install:

clean: clean_headers
	$(ECHO) -n Cleaning directories...
	$(REMOVER) $(REMOVER_OPTS) $(OBJECTS) $(RESOURCES) $(DLLNAME) $(LIBNAME) $(DESIGNEREXE) $(PCIFFMANEXE) $(TRANSLATOREXE) $(SAMPLE1EXE) $(SAMPLE2EXE) $(SAMPLE3EXE) $(SAMPLE4EXE) $(SAMPLE5EXE) $(DESIGNEROBJECTS) $(PCIFFMANOBJECTS) $(TRANSLATOROBJECTS) $(SAMPLE1OBJECTS) $(SAMPLE2OBJECTS) $(SAMPLE3OBJECTS) $(SAMPLE4OBJECTS) $(SAMPLE5OBJECTS) $(SAMPLE4DLLOBJECTS) $(SAMPLE4DLL) $(SAMPLE4LIB)
	$(REMOVER) $(REMOVER_OPTS) $(SAMPLE1DIR)/smooth.dll
	$(REMOVER) $(REMOVER_OPTS) $(SAMPLE2DIR)/smooth.dll
	$(REMOVER) $(REMOVER_OPTS) $(SAMPLE3DIR)/smooth.dll
	$(REMOVER) $(REMOVER_OPTS) $(SAMPLE4DIR)/smooth.dll
	$(REMOVER) $(REMOVER_OPTS) $(SAMPLE5DIR)/smooth.dll
	$(REMOVER) $(REMOVER_OPTS) $(SAMPLE6DIR)/smooth.dll
	$(REMOVER) $(REMOVER_OPTS) $(SAMPLE7DIR)/smooth.dll
	$(ECHO) done.

clean_all: clean
	$(ECHO) -n Cleaning 3rd party libraries...
	$(MAKE) -C libraries clean
	$(REMOVER) $(REMOVER_OPTS) $(LIBICONVDLL) $(LIBLISA) $(LISAOBJECTS)
	$(ECHO) done.

clean_headers:
	$(ECHO) -n Cleaning precompiled headers...
	$(REMOVER) $(REMOVER_OPTS) $(HEADERS)
	$(ECHO) done.

distribute: $(DLLNAME)
	$(ECHO) -n Distributing files to directories...
	$(REMOVER) $(REMOVER_OPTS) NULL
	$(COPIER) $(COPIER_OPTS) $(DLLNAME) $(SAMPLE1DIR)/smooth.dll
	$(COPIER) $(COPIER_OPTS) $(DLLNAME) $(SAMPLE2DIR)/smooth.dll
	$(COPIER) $(COPIER_OPTS) $(DLLNAME) $(SAMPLE3DIR)/smooth.dll
	$(COPIER) $(COPIER_OPTS) $(DLLNAME) $(SAMPLE4DIR)/smooth.dll
	$(COPIER) $(COPIER_OPTS) $(DLLNAME) $(SAMPLE5DIR)/smooth.dll
	$(COPIER) $(COPIER_OPTS) $(DLLNAME) $(SAMPLE6DIR)/smooth.dll
	$(COPIER) $(COPIER_OPTS) $(DLLNAME) $(SAMPLE7DIR)/smooth.dll
	$(ECHO) done.

doc: doc-clean
	doxys

doc-clean:
	rm -r -f doc/reference

$(DLLNAME): $(HEADERS) $(OBJECTS) $(RESOURCES) $(OTHERLIBS)
	$(ECHO) -n Linking $(DLLNAME)...
	$(LINKER) $(OBJECTS) $(RESOURCES) $(LINKER_OPTS) $(LIBS) &> NULL
	$(STRIP) $(STRIP_OPTS) $(DLLNAME)
	$(STRIP) $(LIBSTRIP_OPTS) $(LIBNAME)
	$(PACKER) $(PACKER_OPTS) $(DLLNAME) > NULL
	countbuild BuildNumber
	$(ECHO) done.

$(LIBICONVDLL): $(LIBICONV)
	$(ECHO) -n Linking $(LIBICONVDLL)...
	$(LINKER) $(LIBICONV) -L$(LIBDIR) --shared -o $(LIBICONVDLL) &> NULL
	$(STRIP) $(STRIP_OPTS) $(LIBICONVDLL)
	$(STRIP) $(LIBSTRIP_OPTS) $(LIBICONVDLL)
	$(PACKER) $(PACKER_OPTS) $(LIBICONVDLL) > NULL
	$(ECHO) done.

$(LIBLISA): $(LISAOBJECTS)
	$(ECHO) -n Linking $(LIBLISA)...
	$(AR) r $(LIBLISA) $(LISAOBJECTS) &> NULL
	$(ECHO) done.

$(DESIGNEREXE): $(DLLNAME) $(LIBNAME) $(DESIGNEROBJECTS)
	$(ECHO) -n Linking $(DESIGNEREXE)...
	$(LINKER) $(DESIGNEROBJECTS) $(EXELINKER_OPTS) -o$(DESIGNEREXE)
	$(STRIP) $(STRIP_OPTS) $(DESIGNEREXE)
	$(PACKER) $(PACKER_OPTS) $(DESIGNEREXE) > NULL
	$(ECHO) done.

$(PCIFFMANEXE): $(DLLNAME) $(LIBNAME) $(PCIFFMANOBJECTS)
	$(ECHO) -n Linking $(PCIFFMANEXE)...
	$(LINKER) $(PCIFFMANOBJECTS) $(EXELINKER_OPTS) -o$(PCIFFMANEXE)
	$(STRIP) $(STRIP_OPTS) $(PCIFFMANEXE)
	$(PACKER) $(PACKER_OPTS) $(PCIFFMANEXE) > NULL
	$(ECHO) done.

$(TRANSLATOREXE): $(DLLNAME) $(LIBNAME) $(TRANSLATOROBJECTS)
	$(ECHO) -n Linking $(TRANSLATOREXE)...
	$(LINKER) $(TRANSLATOROBJECTS) $(EXELINKER_OPTS) -o$(TRANSLATOREXE)
	$(STRIP) $(STRIP_OPTS) $(TRANSLATOREXE)
	$(PACKER) $(PACKER_OPTS) $(TRANSLATOREXE) > NULL
	$(ECHO) done.

$(SAMPLE4DLL): $(SAMPLE4DLLOBJECTS)
	$(ECHO) Linking $(SAMPLE4DLL)...
	$(LINKER) $(SAMPLE4DLLOBJECTS) $(PLUGIN_LINKER_OPTS) $(SAMPLESLIBS) > NULL
	$(STRIP) $(STRIP_OPTS) $(SAMPLE4DLL)
	$(STRIP) $(LIBSTRIP_OPTS) $(SAMPLE4LIB)
	$(PACKER) $(PACKER_OPTS) $(SAMPLE4DLL) > NULL
	$(ECHO) done.

$(SAMPLE1EXE): $(DLLNAME) $(LIBNAME) $(SAMPLE1OBJECTS)
	$(ECHO) -n Linking $(SAMPLE1EXE)...
	$(LINKER) $(SAMPLE1OBJECTS) $(EXELINKER_OPTS) -o$(SAMPLE1EXE)
	$(STRIP) $(STRIP_OPTS) $(SAMPLE1EXE)
	$(PACKER) $(PACKER_OPTS) $(SAMPLE1EXE) > NULL
	$(ECHO) done.

$(SAMPLE2EXE): $(DLLNAME) $(LIBNAME) $(SAMPLE2OBJECTS)
	$(ECHO) -n Linking $(SAMPLE2EXE)...
	$(LINKER) $(SAMPLE2OBJECTS) $(EXELINKER_OPTS) -o$(SAMPLE2EXE)
	$(STRIP) $(STRIP_OPTS) $(SAMPLE2EXE)
	$(PACKER) $(PACKER_OPTS) $(SAMPLE2EXE) > NULL
	$(ECHO) done.

$(SAMPLE3EXE): $(DLLNAME) $(LIBNAME) $(SAMPLE3OBJECTS)
	$(ECHO) -n Linking $(SAMPLE3EXE)...
	$(LINKER) $(SAMPLE3OBJECTS) $(EXELINKER_OPTS) -o$(SAMPLE3EXE)
	$(STRIP) $(STRIP_OPTS) $(SAMPLE3EXE)
	$(PACKER) $(PACKER_OPTS) $(SAMPLE3EXE) > NULL
	$(ECHO) done.

$(SAMPLE4EXE): $(DLLNAME) $(LIBNAME) $(SAMPLE4DLL) $(SAMPLE4OBJECTS)
	$(ECHO) -n Linking $(SAMPLE4EXE)...
	$(LINKER) $(SAMPLE4OBJECTS) $(EXELINKER_OPTS) -L$(SAMPLE4DIR) -lmyactivearea -o$(SAMPLE4EXE)
	$(STRIP) $(STRIP_OPTS) $(SAMPLE4EXE)
	$(PACKER) $(PACKER_OPTS) $(SAMPLE4EXE) > NULL
	$(ECHO) done.

$(SAMPLE5EXE): $(DLLNAME) $(LIBNAME) $(SAMPLE5OBJECTS)
	$(ECHO) -n Linking $(SAMPLE5EXE)...
	$(LINKER) $(SAMPLE5OBJECTS) $(EXELINKER_OPTS) -o$(SAMPLE5EXE)
	$(STRIP) $(STRIP_OPTS) $(SAMPLE5EXE)
	$(PACKER) $(PACKER_OPTS) $(SAMPLE5EXE) > NULL
	$(ECHO) done.

include Makefile-objects

$(OBJECTDIR)/lisa_lisa.o: $(LISADIR)/lisa_win32.cpp
	$(ECHO) -n Compiling $(LISADIR)/lisa_win32.cpp...
	$(COMPILER) $(C_COMPILER_OPTS) $(LISADIR)/lisa_win32.cpp -o $(OBJECTDIR)/lisa_lisa.o
	$(ECHO) done.
